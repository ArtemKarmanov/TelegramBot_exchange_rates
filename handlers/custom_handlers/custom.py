import datetime
import os

from loader import bot
from telebot.types import Message, CallbackQuery
from telebot_calendar import Calendar, RUSSIAN_LANGUAGE, CallbackData

import matplotlib as mpl
import matplotlib.pyplot as plt

from utils.database.get_currencies import get_user_currencies
from utils.database.add_history import add_user_history
from utils.site_API.get_currencies_API import get_period_currencies_api, get_value_currency_api
from utils.site_API.get_date import transform_date_format
from keyboards.inline.get_currencies import get_currencies_buttons
from keyboards.reply.back_main import edit_currencies_button, add_back_main_custom_button, remove_back_main_button
from states.custom_states import PeriodCurrency

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
calendar = Calendar(language=RUSSIAN_LANGUAGE)
calendar_callback = CallbackData('calendar', 'action', 'year', 'month', 'day')


@bot.message_handler(state='*', commands=['custom'])
def set_start_date(message: Message) -> None:
	"""
	–°–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞ —Å –ø–µ—Ä–∏–æ–¥–æ–º –¥–∞—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π –≤–∞–ª—é—Ç—ã. –í–≤–æ–¥ –Ω–∞—á–∞–ª—å–Ω–æ–π –¥–∞—Ç—ã.

	:param message: –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	:return: None
	"""
	bot.set_state(message.from_user.id, PeriodCurrency.start_date, message.chat.id)
	add_user_history(message.from_user.id, '–°–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–∞ –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç—ã —Å –ø–µ—Ä–∏–æ–¥–æ–º (/custom).')

	# –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –µ—Å—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –≤–∞–ª—é—Ç
	user_currencies = get_user_currencies(message.from_user.id)
	if not user_currencies:
		bot.send_message(
			message.chat.id,
			'–° –ø—É—Å—Ç—ã–º —Å–ø–∏—Å–∫–æ–º –Ω–∏—á–µ–≥–æ –Ω–µ —Å–º–æ–≥—É –ø–æ—Å—á–∏—Ç–∞—Ç—å ü§î.\n'
			'–î–æ–±–∞–≤—å—Ç–µ –≤ –≤–∞—à —Å–ø–∏—Å–æ–∫ –∫–∞–∫—É—é-–ª–∏–±–æ –≤–∞–ª—é—Ç—É –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–ò–∑–º–µ–Ω–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤–∞–ª—é—Ç—ã¬ª.',
			reply_markup=edit_currencies_button()
		)

	else:
		now = datetime.datetime.now()

		bot.send_message(
			message.chat.id,
			'–Ø –º–æ–≥—É –≤—ã–≤–µ—Å—Ç–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç—ã –∑–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –≤ –≤–∏–¥–µ –≥—Ä–∞—Ñ–∏–∫–∞.\n'
			'–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –¥–æ–ø—É—Å—Ç–∏–º—ã–π –ø–µ—Ä–∏–æ–¥ 365 –¥–Ω–µ–π.\n'
			'–î–ª—è —ç—Ç–æ–≥–æ –Ω—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ –¥–∞—Ç—É –Ω–∞—á–∞–ª–∞, –¥–∞—Ç—É –∫–æ–Ω—Ü–∞ –∏ –≤—ã–±—Ä–∞—Ç—å –≤–∞–ª—é—Ç—É –∏–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞.\n\n',
			reply_markup=remove_back_main_button()
		)

		# –í—ã–∑–æ–≤ markup –∫–∞–ª–µ–Ω–¥–∞—Ä—è
		bot.send_message(
			message.chat.id,
			'–í–≤–µ–¥–∏—Ç–µ –Ω–∞—á–∞–ª—å–Ω—É—é –¥–∞—Ç—É, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å.',
			reply_markup=calendar.create_calendar(
				name=calendar_callback.prefix,
				year=now.year,
				month=now.month
			)
		)


@bot.message_handler(state='*', func=lambda message: message.text == '–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É –ø–µ—Ä–∏–æ–¥–∞')
def back_main_page(message: Message) -> None:
	"""
	–í–æ–∑–≤—Ä–∞—Ç –Ω–∞ —Å—Ç–∞—Ä—Ç–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É –ø–µ—Ä–∏–æ–¥–∞¬ª.
	"""

	bot.delete_state(message.from_user.id, message.chat.id)
	add_user_history(message.from_user.id, '–í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –∫ –≤—ã–±–æ—Ä—É –ø–µ—Ä–∏–æ–¥–∞ –ø—Ä–∏ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–∏ –≥—Ä–∞—Ñ–∏–∫–∞.')

	set_start_date(message)


@bot.callback_query_handler(state='*', func=lambda call: call.data.startswith(calendar_callback.prefix))
def set_date_callback(call: CallbackQuery) -> None:
	"""
	–ö–∞–ª–µ–Ω–¥–∞—Ä—å —Å –≤—ã–±–æ—Ä–æ–º –Ω–∞—á–∞–ª—å–Ω–æ–π –∏ –∫–æ–Ω–µ—á–Ω–æ–π –¥–∞—Ç.

	:param call: –ù–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –¥–∞—Ç—ã –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ.
	:return: None
	"""
	name, action, year, month, day = call.data.split(calendar_callback.sep)
	date = calendar.calendar_query_handler(
		bot=bot, call=call, name=name, action=action, year=year, month=month, day=day
	)

	# –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –¥–Ω—è –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ
	if action == "DAY":
		user_state = bot.get_state(call.from_user.id, call.message.chat.id)
		# –í–≤–µ–¥–µ–Ω–Ω–∞—è –¥–∞—Ç–∞
		set_date = date.strftime('%d.%m.%Y')

		# –ï—Å–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –Ω–∞—á–∞–ª—å–Ω–æ–π –¥–∞—Ç–µ
		if user_state == str(PeriodCurrency.start_date):
			bot.send_message(
				chat_id=call.from_user.id,
				text=f'–í—ã —É–∫–∞–∑–∞–ª–∏ –Ω–∞—á–∞–ª—å–Ω—É—é –¥–∞—Ç—É {set_date}.',
				reply_markup=remove_back_main_button(),
			)

			add_user_history(
				call.from_user.id,
				f'–£–∫–∞–∑–∞–Ω–∞ –Ω–∞—á–∞–ª—å–Ω–∞—è –¥–∞—Ç–∞ {set_date} –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–∞ –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç—ã.'
			)

			with bot.retrieve_data(call.from_user.id, call.message.chat.id) as data:
				now_date = datetime.datetime.now()
				start_date = datetime.datetime.strptime(set_date, '%d.%m.%Y')

				# –ù–∞—á–∞–ª—å–Ω–∞—è –¥–∞—Ç–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–æ–∑–∂–µ —Ç–µ–∫—É—â–µ–π
				if start_date >= now_date:
					bot.send_message(
						call.message.chat.id,
						f'–ù–∞—á–∞–ª—å–Ω–∞—è –¥–∞—Ç–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–æ–∑–∂–µ —Ç–µ–∫—É—â–µ–π –ª–∏–±–æ —Ä–∞–≤–Ω–∞ –µ–π!\n'
						f'–í—ã —É–∫–∞–∑–∞–ª–∏ {set_date}. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.'
					)

				else:
					# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—á–∞–ª—å–Ω–æ–π –¥–∞—Ç—ã —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
					data['start_date'] = set_date

					set_end_date(call)
		# –ï—Å–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –∫–æ–Ω–µ—á–Ω–æ–π –¥–∞—Ç–µ
		elif user_state == str(PeriodCurrency.end_date):

			with bot.retrieve_data(call.from_user.id, call.message.chat.id) as data:
				# –ü–µ—Ä–µ–≤–æ–¥ –¥–∞—Ç –≤ —Ñ–æ—Ä–º–∞—Ç datetime, —á—Ç–æ–±—ã —Å—Ä–∞–≤–Ω–∏–≤–∞—Ç—å
				now_date = datetime.datetime.now()
				start_date = datetime.datetime.strptime(data['start_date'], '%d.%m.%Y')
				end_date = datetime.datetime.strptime(set_date, '%d.%m.%Y')
				max_days = datetime.timedelta(days=365)

				# –ö–æ–Ω–µ—á–Ω–∞—è –¥–∞—Ç–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–∞–Ω—å—à–µ –Ω–∞—á–∞–ª—å–Ω–æ–π
				if start_date >= end_date:
					bot.send_message(
						chat_id=call.message.chat.id,
						text=
						f'–ö–æ–Ω–µ—á–Ω–∞—è –¥–∞—Ç–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–∑–∂–µ –Ω–∞—á–∞–ª—å–Ω–æ–π –∏ –Ω–µ —Ä–∞–≤–Ω–∞ –µ–π! '
						f'–í—ã —É–∫–∞–∑–∞–ª–∏ {set_date}. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.'
					)

					set_end_date(call)
				# –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –º–µ–∂–¥—É –¥–∞—Ç–∞–º–∏ 365 –¥–Ω–µ–π
				elif abs(end_date - start_date) > max_days:
					bot.send_message(
						chat_id=call.message.chat.id,
						text=f'–ú–µ–∂–¥—É –¥–∞—Ç–∞–º–∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ 365 –¥–Ω–µ–π! –í—ã —É–∫–∞–∑–∞–ª–∏ {set_date}. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.'
					)

					set_end_date(call)
				# –ö–æ–Ω–µ—á–Ω–∞—è –¥–∞—Ç–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ –ª–∏–±–æ —Ä–∞–≤–µ–Ω —Ç–µ–∫—É—â–µ–π –¥–∞—Ç–µ
				elif end_date >= now_date:
					bot.send_message(
						chat_id=call.message.chat.id,
						text=
						f'–ö–æ–Ω–µ—á–Ω–∞—è –¥–∞—Ç–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–æ–∑–∂–µ —Ç–µ–∫—É—â–µ–π –∏–ª–∏ —Ä–∞–≤–Ω–∞ –µ–π! '
						f'–í—ã —É–∫–∞–∑–∞–ª–∏ {set_date}. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.'

					)

					set_end_date(call)
				else:
					add_user_history(
						call.from_user.id,
						f'–£–∫–∞–∑–∞–Ω–∞ –∫–æ–Ω–µ—á–Ω–∞—è –¥–∞—Ç–∞ {set_date} –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–∞ –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç—ã.'
					)

					bot.send_message(
						chat_id=call.from_user.id,
						text=f'–í—ã —É–∫–∞–∑–∞–ª–∏ –∫–æ–Ω–µ—á–Ω—É—é –¥–∞—Ç—É {set_date}.',
						reply_markup=remove_back_main_button(),
					)
					# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–Ω–µ—á–Ω–æ–π –¥–∞—Ç—ã —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
					data['end_date'] = set_date

					choose_currency(call)


@bot.callback_query_handler(state=PeriodCurrency.start_date, func=lambda call: call.data)
def set_end_date(call: CallbackQuery) -> None:
	"""
	–í–≤–æ–¥ –∫–æ–Ω–µ—á–Ω–æ–π –¥–∞—Ç—ã –ø–µ—Ä–∏–æ–¥–∞.

	:param call: –í—ã–∑–æ–≤ –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –Ω–∞—á–∞–ª—å–Ω–æ–π –¥–∞—Ç—ã
	:return: None
	"""
	bot.set_state(call.from_user.id, PeriodCurrency.end_date, call.message.chat.id)

	add_user_history(call.from_user.id, '–°–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–∞ —Å –ø–µ—Ä–∏–æ–¥–æ–º, –≤–≤–æ–¥ –∫–æ–Ω–µ—á–Ω–æ–π –¥–∞—Ç—ã.')
	now = datetime.datetime.now()

	# –í—ã–∑–æ–≤ markup –∫–∞–ª–µ–Ω–¥–∞—Ä—è
	bot.send_message(
		call.message.chat.id,
		'–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –æ–∫–æ–Ω—á–∞–Ω–∏—è.',
		reply_markup=calendar.create_calendar(
			name=calendar_callback.prefix,
			year=now.year,
			month=now.month
		)
	)


@bot.callback_query_handler(state=PeriodCurrency.end_date, func=lambda call: call.data)
def choose_currency(call: CallbackQuery) -> None:
	"""
	–í—ã–±–æ—Ä –≤–∞–ª—é—Ç—ã –∏–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

	:param call: –°–æ–æ–±—â–µ–Ω–∏–µ
	:return: None
	"""
	bot.set_state(call.from_user.id, PeriodCurrency.currency, call.message.chat.id)
	add_user_history(call.from_user.id, '–°–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–∞ —Å –ø–µ—Ä–∏–æ–¥–æ–º, –≤—ã–±–æ—Ä –≤–∞–ª—é—Ç—ã –∏–∑ —Å–ø–∏—Å–∫–∞.')

	# –°–ø–∏—Å–æ–∫ –≤–∞–ª—é—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	user_currencies = get_user_currencies(call.from_user.id)

	# –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞ –∫–∞–∂–¥—É—é –≤–∞–ª—é—Ç—É
	markup = get_currencies_buttons(user_currencies)

	bot.send_message(
		call.message.chat.id,
		'–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É –∏–∑ –≤–∞—à–µ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å.\n\n',
		reply_markup=markup
	)

	# –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –≤—ã–±–æ—Ä—É –ø–µ—Ä–∏–æ–¥–∞ –∏ –∫–Ω–æ–ø–∫–∞ –∫ –∏–∑–º–µ–Ω–µ–Ω–∏—é —Å–ø–∏—Å–∫–∞ –≤–∞–ª—é—Ç
	markup_edit_currencies = add_back_main_custom_button()
	bot.send_message(
		call.message.chat.id,
		'–ß—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –≤–∞—à–µ–º —Å–ø–∏—Å–∫–µ –≤–∞–ª—é—Ç, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ¬´–ò–∑–º–µ–Ω–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤–∞–ª—é—Ç¬ª.\n'
		'–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–µ—Ä–∏–æ–¥, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ¬´–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É –ø–µ—Ä–∏–æ–¥–∞¬ª.',
		reply_markup=markup_edit_currencies
	)


@bot.callback_query_handler(state=PeriodCurrency.currency, func=lambda call: call.data.startswith('currency_'))
def period_currency(call: CallbackQuery) -> None:
	"""
	–í—ã–≤–æ–¥ –∫—É—Ä—Å–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≤–∞–ª—é—Ç—ã –∑–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥.

	:param call: –°–æ–æ–±—â–µ–Ω–∏–µ
	:return: None
	"""
	# –ë–µ—Ä–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞–ª—é—Ç—ã
	name_currency = call.data[9:]

	bot.edit_message_text(
		chat_id=call.message.chat.id,
		message_id=call.message.message_id,
		text=f'–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤–∞–ª—é—Ç—É ¬´{name_currency}¬ª.'
	)

	# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥—Ä–∞—Ñ–∏–∫–∞
	fig, ax = plt.subplots(figsize=(5, 2.7), layout='constrained')

	with bot.retrieve_data(call.from_user.id, call.message.chat.id) as data:
		add_user_history(
			call.from_user.id,
			f'–°–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–∞ –≤–∞–ª—é—Ç—ã {name_currency} —Å {data["start_date"]} –ø–æ {data["end_date"]}.'
		)
		# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –≥—Ä–∞—Ñ–∏–∫–∞
		ax.set_title(f'–ö—É—Ä—Å ¬´{name_currency}¬ª —Å {data["start_date"]} –ø–æ {data["end_date"]}')

		# –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç–∞ –≤ –≤–∏–¥ –¥–ª—è API
		data['start_date'] = transform_date_format(value=data['start_date'])
		data['end_date'] = transform_date_format(value=data['end_date'])

		# –î–∞–Ω–Ω—ã–µ –ø–æ –¥–∞—Ç–∞–º –æ—Ç API
		period_data = get_period_currencies_api(start_date=data['start_date'], end_date=data['end_date'])

	# –°–ø–∏—Å–æ–∫ –∑–Ω–∞—á–µ–Ω–∏–π –ø–æ x –∏ y
	dates_x = []
	values_y = []
	# –ë–µ—Ä–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ —Ä—É–±–ª—è
	value_rub = get_value_currency_api('RUB')

	# –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –¥–∞–Ω–Ω—ã–º –æ—Ç API
	for date, currencies in period_data.items():
		# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–∞—Ç—ã –≤ —Å–ø–∏—Å–æ–∫
		dates_x.append(mpl.dates.datestr2num(date))
		# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç—ã –≤ —Å–ø–∏—Å–æ–∫, –µ—Å–ª–∏ –∏–º—è —Å–æ–≤–ø–∞–ª–æ
		for currency, value in currencies.items():
			if currency == name_currency:
				value = round(float(value_rub) / float(value), 2)
				values_y.append(value)
				break

	# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ç–∫–∏
	ax.grid(True)

	# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–∞
	ax.plot(dates_x, values_y)

	cdf = mpl.dates.ConciseDateFormatter(ax.xaxis.get_major_locator())
	ax.xaxis.set_major_formatter(cdf)

	# –ü—É—Ç—å –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–∞
	path = f'uploads/custom/user_{call.from_user.id}/'
	name_file = 'custom_result.png'

	# –ï—Å–ª–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Ç–æ —Å–æ–∑–¥–∞–µ–º –µ—ë
	if not os.path.isdir(path):
		os.mkdir(path)

	# –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∏–≥—É—Ä—É –≤ –≤–∏–¥–µ —Ñ–∞–π–ª–∞
	fig.savefig(f'{path}{name_file}', dpi=200)

	# –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
	photo = open(f'{path}{name_file}', 'rb')

	# –û—Ç–ø—Ä–∞–≤–∫–∞ –≥—Ä–∞—Ñ–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
	bot.send_photo(call.message.chat.id, photo)

	bot.delete_state(call.from_user.id, call.message.chat.id)
